@model ZamaTronicts.Models.UserViewModel

@{
    ViewBag.Title = "ViewUsers";
}
<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            @Html.ActionLink("Home", "ViewProducts", "Product", new { area = "" }, new { @class = "navbar-brand" })
        </div>
    </div>
</div>

<h2>ZamaTronicts Users</h2>


<table class="table">
    <tr>
        <th>

        </th>
        <th>

        </th>
        <th>
            @Html.DisplayNameFor(model => model.singleUserPO.accountFirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.singleUserPO.accountLastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.singleUserPO.accountEmail)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.singleUserPO.accountPhoneNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.singleUserPO.accountAddress)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.singleUserPO.accountCity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.singleUserPO.accountState)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.singleUserPO.accountZip)
        </th>


        <th></th>
    </tr>

@foreach (var item in Model.listUserPO) {
    <tr>
        <td>
            @Html.HiddenFor(modelItem => item.userTableID)
        </td>
        <td>
            @Html.HiddenFor(modelItem => item.accountInfoID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.accountFirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.accountLastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.accountEmail)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.accountPhoneNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.accountAddress)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.accountCity)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.accountState)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.accountZip)
        </td>
        <td>
            @Html.ActionLink("Update", "UpdateUser", new { userTableID = item.userTableID, accountInfoID = item.accountInfoID })
        </td>
        <td>
            @if ((int)Session["userTableID"] != item.userTableID)
            {

                @Html.ActionLink("Delete", "DeleteUser", new { userTableID = item.userTableID, accountInfoID = item.accountInfoID })
            }
            </td>


</tr>
}

</table>
